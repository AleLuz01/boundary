version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-528f99d718633a82bd8441e40a16f64499f5613f make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-9ed99d08a49f6cddfd0338109588e004bceaf3a8-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-d587a0ff911037b96e040bdc823536cfefa7233d-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-6498a9069eee7d8b6105053a814293943f231c72-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-528f99d718633a82bd8441e40a16f64499f5613f-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-528f99d718633a82bd8441e40a16f64499f5613f-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-528f99d718633a82bd8441e40a16f64499f5613f.tar.gz
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3-{{checksum ".buildcache/cache-keys/package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3"}}
          name: Restore package cache
      - restore_cache:
          key: package-771656630eb7b41f4cb9a844956238ddbfab45b1-{{checksum ".buildcache/cache-keys/package-771656630eb7b41f4cb9a844956238ddbfab45b1"}}
          name: Restore package cache
      - restore_cache:
          key: package-38b0460fcb3551f323c78becc8cc2d671406d3a2-{{checksum ".buildcache/cache-keys/package-38b0460fcb3551f323c78becc8cc2d671406d3a2"}}
          name: Restore package cache
      - restore_cache:
          key: package-7cb270453f6722e0678bf23f6bb84479747a368e-{{checksum ".buildcache/cache-keys/package-7cb270453f6722e0678bf23f6bb84479747a368e"}}
          name: Restore package cache
      - restore_cache:
          key: package-6c1487816b1d87d785364fdce5c1a9d70c290593-{{checksum ".buildcache/cache-keys/package-6c1487816b1d87d785364fdce5c1a9d70c290593"}}
          name: Restore package cache
      - restore_cache:
          key: package-e23486d7be1b72160ab6a81ef9839b70daf9a053-{{checksum ".buildcache/cache-keys/package-e23486d7be1b72160ab6a81ef9839b70daf9a053"}}
          name: Restore package cache
      - restore_cache:
          key: package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c-{{checksum ".buildcache/cache-keys/package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c"}}
          name: Restore package cache
      - restore_cache:
          key: package-8972308b371890d943316a6a4cd9144daf14081b-{{checksum ".buildcache/cache-keys/package-8972308b371890d943316a6a4cd9144daf14081b"}}
          name: Restore package cache
      - restore_cache:
          key: package-bc2e32509f304f69edcda56a80b3dab0040efe90-{{checksum ".buildcache/cache-keys/package-bc2e32509f304f69edcda56a80b3dab0040efe90"}}
          name: Restore package cache
      - restore_cache:
          key: package-83649e0d7cd7b50b552270230abd368f9e8e4f9e-{{checksum ".buildcache/cache-keys/package-83649e0d7cd7b50b552270230abd368f9e8e4f9e"}}
          name: Restore package cache
      - restore_cache:
          key: package-b162ca504e69e9ee6f0104b9093f818b38ba755b-{{checksum ".buildcache/cache-keys/package-b162ca504e69e9ee6f0104b9093f818b38ba755b"}}
          name: Restore package cache
      - restore_cache:
          key: package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0-{{checksum ".buildcache/cache-keys/package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0"}}
          name: Restore package cache
      - restore_cache:
          key: package-04973988d74478b004cba212a211ebc1bce7723f-{{checksum ".buildcache/cache-keys/package-04973988d74478b004cba212a211ebc1bce7723f"}}
          name: Restore package cache
      - restore_cache:
          key: package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544-{{checksum ".buildcache/cache-keys/package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544"}}
          name: Restore package cache
      - restore_cache:
          key: package-d752f124243ec5b980d96902fe1baa596a1fab01-{{checksum ".buildcache/cache-keys/package-d752f124243ec5b980d96902fe1baa596a1fab01"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-8c3978981a59be35.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-8c3978981a59be35.tar.gz .buildcache/packages lockfile-8c3978981a59be35.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-8c3978981a59be35.tar.gz .buildcache/packages/store/*.json lockfile-8c3978981a59be35.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-8c3978981a59be35.yml
      - store_artifacts:
          path: packages-8c3978981a59be35.tar.gz
      - store_artifacts:
          path: meta-8c3978981a59be35.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3-{{checksum ".buildcache/cache-keys/package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3-{{checksum ".buildcache/cache-keys/package-4bf0b76db40d0e9e9235a3117e880b32ef3530d3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4bf0b76db40d0e9e9235a3117e880b32ef3530d3
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-771656630eb7b41f4cb9a844956238ddbfab45b1-{{checksum ".buildcache/cache-keys/package-771656630eb7b41f4cb9a844956238ddbfab45b1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-771656630eb7b41f4cb9a844956238ddbfab45b1-{{checksum ".buildcache/cache-keys/package-771656630eb7b41f4cb9a844956238ddbfab45b1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 771656630eb7b41f4cb9a844956238ddbfab45b1
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-38b0460fcb3551f323c78becc8cc2d671406d3a2-{{checksum ".buildcache/cache-keys/package-38b0460fcb3551f323c78becc8cc2d671406d3a2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-38b0460fcb3551f323c78becc8cc2d671406d3a2-{{checksum ".buildcache/cache-keys/package-38b0460fcb3551f323c78becc8cc2d671406d3a2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 38b0460fcb3551f323c78becc8cc2d671406d3a2
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7cb270453f6722e0678bf23f6bb84479747a368e-{{checksum ".buildcache/cache-keys/package-7cb270453f6722e0678bf23f6bb84479747a368e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7cb270453f6722e0678bf23f6bb84479747a368e-{{checksum ".buildcache/cache-keys/package-7cb270453f6722e0678bf23f6bb84479747a368e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7cb270453f6722e0678bf23f6bb84479747a368e
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6c1487816b1d87d785364fdce5c1a9d70c290593-{{checksum ".buildcache/cache-keys/package-6c1487816b1d87d785364fdce5c1a9d70c290593"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6c1487816b1d87d785364fdce5c1a9d70c290593-{{checksum ".buildcache/cache-keys/package-6c1487816b1d87d785364fdce5c1a9d70c290593"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6c1487816b1d87d785364fdce5c1a9d70c290593
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e23486d7be1b72160ab6a81ef9839b70daf9a053-{{checksum ".buildcache/cache-keys/package-e23486d7be1b72160ab6a81ef9839b70daf9a053"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e23486d7be1b72160ab6a81ef9839b70daf9a053-{{checksum ".buildcache/cache-keys/package-e23486d7be1b72160ab6a81ef9839b70daf9a053"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e23486d7be1b72160ab6a81ef9839b70daf9a053
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c-{{checksum ".buildcache/cache-keys/package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c-{{checksum ".buildcache/cache-keys/package-e7327bdcdb2bf04845922f5ebc91aea3ec0e811c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e7327bdcdb2bf04845922f5ebc91aea3ec0e811c
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8972308b371890d943316a6a4cd9144daf14081b-{{checksum ".buildcache/cache-keys/package-8972308b371890d943316a6a4cd9144daf14081b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8972308b371890d943316a6a4cd9144daf14081b-{{checksum ".buildcache/cache-keys/package-8972308b371890d943316a6a4cd9144daf14081b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8972308b371890d943316a6a4cd9144daf14081b
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bc2e32509f304f69edcda56a80b3dab0040efe90-{{checksum ".buildcache/cache-keys/package-bc2e32509f304f69edcda56a80b3dab0040efe90"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bc2e32509f304f69edcda56a80b3dab0040efe90-{{checksum ".buildcache/cache-keys/package-bc2e32509f304f69edcda56a80b3dab0040efe90"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bc2e32509f304f69edcda56a80b3dab0040efe90
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-83649e0d7cd7b50b552270230abd368f9e8e4f9e-{{checksum ".buildcache/cache-keys/package-83649e0d7cd7b50b552270230abd368f9e8e4f9e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-83649e0d7cd7b50b552270230abd368f9e8e4f9e-{{checksum ".buildcache/cache-keys/package-83649e0d7cd7b50b552270230abd368f9e8e4f9e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 83649e0d7cd7b50b552270230abd368f9e8e4f9e
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b162ca504e69e9ee6f0104b9093f818b38ba755b-{{checksum ".buildcache/cache-keys/package-b162ca504e69e9ee6f0104b9093f818b38ba755b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b162ca504e69e9ee6f0104b9093f818b38ba755b-{{checksum ".buildcache/cache-keys/package-b162ca504e69e9ee6f0104b9093f818b38ba755b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b162ca504e69e9ee6f0104b9093f818b38ba755b
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0-{{checksum ".buildcache/cache-keys/package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0-{{checksum ".buildcache/cache-keys/package-6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6feb3d448c54bdf9875f8507e3ac5e84a7d9a5f0
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-04973988d74478b004cba212a211ebc1bce7723f-{{checksum ".buildcache/cache-keys/package-04973988d74478b004cba212a211ebc1bce7723f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-04973988d74478b004cba212a211ebc1bce7723f-{{checksum ".buildcache/cache-keys/package-04973988d74478b004cba212a211ebc1bce7723f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 04973988d74478b004cba212a211ebc1bce7723f
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544-{{checksum ".buildcache/cache-keys/package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544-{{checksum ".buildcache/cache-keys/package-6bbb9a1ca7499f6a031860d9f41647c84fbfc544"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6bbb9a1ca7499f6a031860d9f41647c84fbfc544
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d752f124243ec5b980d96902fe1baa596a1fab01-{{checksum ".buildcache/cache-keys/package-d752f124243ec5b980d96902fe1baa596a1fab01"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_528f_{{checksum ".buildcache/cache-keys/copy-source-528f99d718633a82bd8441e40a16f64499f5613f"}}
          keys:
            - go-modules_6498_{{checksum ".buildcache/cache-keys/go-modules-6498a9069eee7d8b6105053a814293943f231c72"}}
            - ui_d587_{{checksum ".buildcache/cache-keys/ui-d587a0ff911037b96e040bdc823536cfefa7233d"}}
            - base_9ed9_{{checksum ".buildcache/cache-keys/base-9ed99d08a49f6cddfd0338109588e004bceaf3a8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d752f124243ec5b980d96902fe1baa596a1fab01-{{checksum ".buildcache/cache-keys/package-d752f124243ec5b980d96902fe1baa596a1fab01"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d752f124243ec5b980d96902fe1baa596a1fab01
workflows:
  build-8c3978981a59be35:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
