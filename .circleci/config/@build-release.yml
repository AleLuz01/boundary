version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-2502be88fa57c1e224989891cf4652828c621660 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-b2f59b2d4223729e0cfca83f651ade1039b52e39-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2502be88fa57c1e224989891cf4652828c621660-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2502be88fa57c1e224989891cf4652828c621660-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-2502be88fa57c1e224989891cf4652828c621660.tar.gz
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985-{{checksum ".buildcache/cache-keys/package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985"}}
          name: Restore package cache
      - restore_cache:
          key: package-9e2153412c2222998a58667ce3509a6465ce52e6-{{checksum ".buildcache/cache-keys/package-9e2153412c2222998a58667ce3509a6465ce52e6"}}
          name: Restore package cache
      - restore_cache:
          key: package-9e13b36deb010078a910e7ad5428dddd4be0d41c-{{checksum ".buildcache/cache-keys/package-9e13b36deb010078a910e7ad5428dddd4be0d41c"}}
          name: Restore package cache
      - restore_cache:
          key: package-96556d58297b79f56cfa3be6efab689b6da81795-{{checksum ".buildcache/cache-keys/package-96556d58297b79f56cfa3be6efab689b6da81795"}}
          name: Restore package cache
      - restore_cache:
          key: package-d62e255735d8c41a01970584167f90469ff57511-{{checksum ".buildcache/cache-keys/package-d62e255735d8c41a01970584167f90469ff57511"}}
          name: Restore package cache
      - restore_cache:
          key: package-0379ae2aa4f606508ee3588226dc57d670228cb8-{{checksum ".buildcache/cache-keys/package-0379ae2aa4f606508ee3588226dc57d670228cb8"}}
          name: Restore package cache
      - restore_cache:
          key: package-6f049c422da759891e9914390fded5c81cad16d7-{{checksum ".buildcache/cache-keys/package-6f049c422da759891e9914390fded5c81cad16d7"}}
          name: Restore package cache
      - restore_cache:
          key: package-c7534185600a76304a5b39fe969c09fd8b79ff0a-{{checksum ".buildcache/cache-keys/package-c7534185600a76304a5b39fe969c09fd8b79ff0a"}}
          name: Restore package cache
      - restore_cache:
          key: package-195aedcfd2570862a4f40f6146d38d18c7230fb9-{{checksum ".buildcache/cache-keys/package-195aedcfd2570862a4f40f6146d38d18c7230fb9"}}
          name: Restore package cache
      - restore_cache:
          key: package-cc19e81bff359ffe304d3c0966c0d1c6667c3321-{{checksum ".buildcache/cache-keys/package-cc19e81bff359ffe304d3c0966c0d1c6667c3321"}}
          name: Restore package cache
      - restore_cache:
          key: package-3cf0ca13914efb108864e5107bc9ad6d714f93cc-{{checksum ".buildcache/cache-keys/package-3cf0ca13914efb108864e5107bc9ad6d714f93cc"}}
          name: Restore package cache
      - restore_cache:
          key: package-67ccb806a25294adabed022cdea8aabcecfd3cbc-{{checksum ".buildcache/cache-keys/package-67ccb806a25294adabed022cdea8aabcecfd3cbc"}}
          name: Restore package cache
      - restore_cache:
          key: package-bfb92b866b37a7c1a36dda753d56b6846e12096b-{{checksum ".buildcache/cache-keys/package-bfb92b866b37a7c1a36dda753d56b6846e12096b"}}
          name: Restore package cache
      - restore_cache:
          key: package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3-{{checksum ".buildcache/cache-keys/package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3"}}
          name: Restore package cache
      - restore_cache:
          key: package-1c91f6bb7cbbfdd86620db212c29487b7fc45575-{{checksum ".buildcache/cache-keys/package-1c91f6bb7cbbfdd86620db212c29487b7fc45575"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-a1796f5a081f8831.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-a1796f5a081f8831.tar.gz .buildcache/packages lockfile-a1796f5a081f8831.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-a1796f5a081f8831.tar.gz .buildcache/packages/store/*.json lockfile-a1796f5a081f8831.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-a1796f5a081f8831.yml
      - store_artifacts:
          path: packages-a1796f5a081f8831.tar.gz
      - store_artifacts:
          path: meta-a1796f5a081f8831.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985-{{checksum ".buildcache/cache-keys/package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985-{{checksum ".buildcache/cache-keys/package-49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 49cfac6cf2ac5a8f20ae3aade46a40bcb9e96985
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9e2153412c2222998a58667ce3509a6465ce52e6-{{checksum ".buildcache/cache-keys/package-9e2153412c2222998a58667ce3509a6465ce52e6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9e2153412c2222998a58667ce3509a6465ce52e6-{{checksum ".buildcache/cache-keys/package-9e2153412c2222998a58667ce3509a6465ce52e6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9e2153412c2222998a58667ce3509a6465ce52e6
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9e13b36deb010078a910e7ad5428dddd4be0d41c-{{checksum ".buildcache/cache-keys/package-9e13b36deb010078a910e7ad5428dddd4be0d41c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9e13b36deb010078a910e7ad5428dddd4be0d41c-{{checksum ".buildcache/cache-keys/package-9e13b36deb010078a910e7ad5428dddd4be0d41c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9e13b36deb010078a910e7ad5428dddd4be0d41c
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96556d58297b79f56cfa3be6efab689b6da81795-{{checksum ".buildcache/cache-keys/package-96556d58297b79f56cfa3be6efab689b6da81795"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96556d58297b79f56cfa3be6efab689b6da81795-{{checksum ".buildcache/cache-keys/package-96556d58297b79f56cfa3be6efab689b6da81795"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96556d58297b79f56cfa3be6efab689b6da81795
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d62e255735d8c41a01970584167f90469ff57511-{{checksum ".buildcache/cache-keys/package-d62e255735d8c41a01970584167f90469ff57511"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d62e255735d8c41a01970584167f90469ff57511-{{checksum ".buildcache/cache-keys/package-d62e255735d8c41a01970584167f90469ff57511"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d62e255735d8c41a01970584167f90469ff57511
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0379ae2aa4f606508ee3588226dc57d670228cb8-{{checksum ".buildcache/cache-keys/package-0379ae2aa4f606508ee3588226dc57d670228cb8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0379ae2aa4f606508ee3588226dc57d670228cb8-{{checksum ".buildcache/cache-keys/package-0379ae2aa4f606508ee3588226dc57d670228cb8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0379ae2aa4f606508ee3588226dc57d670228cb8
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6f049c422da759891e9914390fded5c81cad16d7-{{checksum ".buildcache/cache-keys/package-6f049c422da759891e9914390fded5c81cad16d7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6f049c422da759891e9914390fded5c81cad16d7-{{checksum ".buildcache/cache-keys/package-6f049c422da759891e9914390fded5c81cad16d7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6f049c422da759891e9914390fded5c81cad16d7
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c7534185600a76304a5b39fe969c09fd8b79ff0a-{{checksum ".buildcache/cache-keys/package-c7534185600a76304a5b39fe969c09fd8b79ff0a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c7534185600a76304a5b39fe969c09fd8b79ff0a-{{checksum ".buildcache/cache-keys/package-c7534185600a76304a5b39fe969c09fd8b79ff0a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c7534185600a76304a5b39fe969c09fd8b79ff0a
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-195aedcfd2570862a4f40f6146d38d18c7230fb9-{{checksum ".buildcache/cache-keys/package-195aedcfd2570862a4f40f6146d38d18c7230fb9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-195aedcfd2570862a4f40f6146d38d18c7230fb9-{{checksum ".buildcache/cache-keys/package-195aedcfd2570862a4f40f6146d38d18c7230fb9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 195aedcfd2570862a4f40f6146d38d18c7230fb9
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cc19e81bff359ffe304d3c0966c0d1c6667c3321-{{checksum ".buildcache/cache-keys/package-cc19e81bff359ffe304d3c0966c0d1c6667c3321"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cc19e81bff359ffe304d3c0966c0d1c6667c3321-{{checksum ".buildcache/cache-keys/package-cc19e81bff359ffe304d3c0966c0d1c6667c3321"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cc19e81bff359ffe304d3c0966c0d1c6667c3321
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3cf0ca13914efb108864e5107bc9ad6d714f93cc-{{checksum ".buildcache/cache-keys/package-3cf0ca13914efb108864e5107bc9ad6d714f93cc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3cf0ca13914efb108864e5107bc9ad6d714f93cc-{{checksum ".buildcache/cache-keys/package-3cf0ca13914efb108864e5107bc9ad6d714f93cc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3cf0ca13914efb108864e5107bc9ad6d714f93cc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-67ccb806a25294adabed022cdea8aabcecfd3cbc-{{checksum ".buildcache/cache-keys/package-67ccb806a25294adabed022cdea8aabcecfd3cbc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-67ccb806a25294adabed022cdea8aabcecfd3cbc-{{checksum ".buildcache/cache-keys/package-67ccb806a25294adabed022cdea8aabcecfd3cbc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 67ccb806a25294adabed022cdea8aabcecfd3cbc
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bfb92b866b37a7c1a36dda753d56b6846e12096b-{{checksum ".buildcache/cache-keys/package-bfb92b866b37a7c1a36dda753d56b6846e12096b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bfb92b866b37a7c1a36dda753d56b6846e12096b-{{checksum ".buildcache/cache-keys/package-bfb92b866b37a7c1a36dda753d56b6846e12096b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bfb92b866b37a7c1a36dda753d56b6846e12096b
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3-{{checksum ".buildcache/cache-keys/package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3-{{checksum ".buildcache/cache-keys/package-7407f3ad8beb12959d1dfce92b91d0e1f770e2d3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7407f3ad8beb12959d1dfce92b91d0e1f770e2d3
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1c91f6bb7cbbfdd86620db212c29487b7fc45575-{{checksum ".buildcache/cache-keys/package-1c91f6bb7cbbfdd86620db212c29487b7fc45575"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2502_{{checksum ".buildcache/cache-keys/copy-source-2502be88fa57c1e224989891cf4652828c621660"}}
          keys:
            - go-modules_c844_{{checksum ".buildcache/cache-keys/go-modules-c844ead2cbfb731dfe7dced10ca11cc787b64d5d"}}
            - ui_6ad3_{{checksum ".buildcache/cache-keys/ui-6ad3ab8079f57106f69bcb6b0e1c680630ac5b90"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1c91f6bb7cbbfdd86620db212c29487b7fc45575-{{checksum ".buildcache/cache-keys/package-1c91f6bb7cbbfdd86620db212c29487b7fc45575"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1c91f6bb7cbbfdd86620db212c29487b7fc45575
workflows:
  build-a1796f5a081f8831:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
