version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-b2d4621e8610464ada41eb6c1773585919b7f153-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-51f724b890473b3100898bc034a41c88964158f9-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a.tar.gz
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-d63b7e7194c7d439fbdfe96eafa714279b34e36d-{{checksum ".buildcache/cache-keys/package-d63b7e7194c7d439fbdfe96eafa714279b34e36d"}}
          name: Restore package cache
      - restore_cache:
          key: package-44bce5d6b2c4b388efadcd532ff7f38148f27c04-{{checksum ".buildcache/cache-keys/package-44bce5d6b2c4b388efadcd532ff7f38148f27c04"}}
          name: Restore package cache
      - restore_cache:
          key: package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672-{{checksum ".buildcache/cache-keys/package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672"}}
          name: Restore package cache
      - restore_cache:
          key: package-d11a52f0e21249b621e7095c944bade83315598e-{{checksum ".buildcache/cache-keys/package-d11a52f0e21249b621e7095c944bade83315598e"}}
          name: Restore package cache
      - restore_cache:
          key: package-1e229dad7677a3af5f28c128d183fcea09586d6f-{{checksum ".buildcache/cache-keys/package-1e229dad7677a3af5f28c128d183fcea09586d6f"}}
          name: Restore package cache
      - restore_cache:
          key: package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94-{{checksum ".buildcache/cache-keys/package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94"}}
          name: Restore package cache
      - restore_cache:
          key: package-1c8784eb79517aa7952bc0202643aae89121e3f4-{{checksum ".buildcache/cache-keys/package-1c8784eb79517aa7952bc0202643aae89121e3f4"}}
          name: Restore package cache
      - restore_cache:
          key: package-2619408eb8d1e61660849f752a9f183421e35ea7-{{checksum ".buildcache/cache-keys/package-2619408eb8d1e61660849f752a9f183421e35ea7"}}
          name: Restore package cache
      - restore_cache:
          key: package-710e1aebbf48b2a94d5a6ae034987d15218e1a36-{{checksum ".buildcache/cache-keys/package-710e1aebbf48b2a94d5a6ae034987d15218e1a36"}}
          name: Restore package cache
      - restore_cache:
          key: package-5ffffbe89e0aa38b296d4d2244171432a009b9fd-{{checksum ".buildcache/cache-keys/package-5ffffbe89e0aa38b296d4d2244171432a009b9fd"}}
          name: Restore package cache
      - restore_cache:
          key: package-a526eb032785c717d1d154ed4a4337c726a852fc-{{checksum ".buildcache/cache-keys/package-a526eb032785c717d1d154ed4a4337c726a852fc"}}
          name: Restore package cache
      - restore_cache:
          key: package-714680259d338967dfb7c4fce49d6812d7302f41-{{checksum ".buildcache/cache-keys/package-714680259d338967dfb7c4fce49d6812d7302f41"}}
          name: Restore package cache
      - restore_cache:
          key: package-dfe836bf0fc14f8670c9c54af38d424f452dab44-{{checksum ".buildcache/cache-keys/package-dfe836bf0fc14f8670c9c54af38d424f452dab44"}}
          name: Restore package cache
      - restore_cache:
          key: package-b9216b0858a42b84c5741e44794e51fd94cb081f-{{checksum ".buildcache/cache-keys/package-b9216b0858a42b84c5741e44794e51fd94cb081f"}}
          name: Restore package cache
      - restore_cache:
          key: package-84433aa0f6e075f634ee331267ce8fc0bdcada4e-{{checksum ".buildcache/cache-keys/package-84433aa0f6e075f634ee331267ce8fc0bdcada4e"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-c0a83677fce3734d.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-c0a83677fce3734d.tar.gz .buildcache/packages lockfile-c0a83677fce3734d.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-c0a83677fce3734d.tar.gz .buildcache/packages/store/*.json lockfile-c0a83677fce3734d.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-c0a83677fce3734d.yml
      - store_artifacts:
          path: packages-c0a83677fce3734d.tar.gz
      - store_artifacts:
          path: meta-c0a83677fce3734d.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d63b7e7194c7d439fbdfe96eafa714279b34e36d-{{checksum ".buildcache/cache-keys/package-d63b7e7194c7d439fbdfe96eafa714279b34e36d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d63b7e7194c7d439fbdfe96eafa714279b34e36d-{{checksum ".buildcache/cache-keys/package-d63b7e7194c7d439fbdfe96eafa714279b34e36d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d63b7e7194c7d439fbdfe96eafa714279b34e36d
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-44bce5d6b2c4b388efadcd532ff7f38148f27c04-{{checksum ".buildcache/cache-keys/package-44bce5d6b2c4b388efadcd532ff7f38148f27c04"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-44bce5d6b2c4b388efadcd532ff7f38148f27c04-{{checksum ".buildcache/cache-keys/package-44bce5d6b2c4b388efadcd532ff7f38148f27c04"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 44bce5d6b2c4b388efadcd532ff7f38148f27c04
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672-{{checksum ".buildcache/cache-keys/package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672-{{checksum ".buildcache/cache-keys/package-76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 76ec7bfcb6864c44444fdecd4cfbf8a1d53ae672
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d11a52f0e21249b621e7095c944bade83315598e-{{checksum ".buildcache/cache-keys/package-d11a52f0e21249b621e7095c944bade83315598e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d11a52f0e21249b621e7095c944bade83315598e-{{checksum ".buildcache/cache-keys/package-d11a52f0e21249b621e7095c944bade83315598e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d11a52f0e21249b621e7095c944bade83315598e
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1e229dad7677a3af5f28c128d183fcea09586d6f-{{checksum ".buildcache/cache-keys/package-1e229dad7677a3af5f28c128d183fcea09586d6f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1e229dad7677a3af5f28c128d183fcea09586d6f-{{checksum ".buildcache/cache-keys/package-1e229dad7677a3af5f28c128d183fcea09586d6f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1e229dad7677a3af5f28c128d183fcea09586d6f
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94-{{checksum ".buildcache/cache-keys/package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94-{{checksum ".buildcache/cache-keys/package-e5b15a8b97b404d55bd3fc757bc748ba310d5c94"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e5b15a8b97b404d55bd3fc757bc748ba310d5c94
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1c8784eb79517aa7952bc0202643aae89121e3f4-{{checksum ".buildcache/cache-keys/package-1c8784eb79517aa7952bc0202643aae89121e3f4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1c8784eb79517aa7952bc0202643aae89121e3f4-{{checksum ".buildcache/cache-keys/package-1c8784eb79517aa7952bc0202643aae89121e3f4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1c8784eb79517aa7952bc0202643aae89121e3f4
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2619408eb8d1e61660849f752a9f183421e35ea7-{{checksum ".buildcache/cache-keys/package-2619408eb8d1e61660849f752a9f183421e35ea7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2619408eb8d1e61660849f752a9f183421e35ea7-{{checksum ".buildcache/cache-keys/package-2619408eb8d1e61660849f752a9f183421e35ea7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2619408eb8d1e61660849f752a9f183421e35ea7
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-710e1aebbf48b2a94d5a6ae034987d15218e1a36-{{checksum ".buildcache/cache-keys/package-710e1aebbf48b2a94d5a6ae034987d15218e1a36"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-710e1aebbf48b2a94d5a6ae034987d15218e1a36-{{checksum ".buildcache/cache-keys/package-710e1aebbf48b2a94d5a6ae034987d15218e1a36"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 710e1aebbf48b2a94d5a6ae034987d15218e1a36
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5ffffbe89e0aa38b296d4d2244171432a009b9fd-{{checksum ".buildcache/cache-keys/package-5ffffbe89e0aa38b296d4d2244171432a009b9fd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5ffffbe89e0aa38b296d4d2244171432a009b9fd-{{checksum ".buildcache/cache-keys/package-5ffffbe89e0aa38b296d4d2244171432a009b9fd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5ffffbe89e0aa38b296d4d2244171432a009b9fd
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a526eb032785c717d1d154ed4a4337c726a852fc-{{checksum ".buildcache/cache-keys/package-a526eb032785c717d1d154ed4a4337c726a852fc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a526eb032785c717d1d154ed4a4337c726a852fc-{{checksum ".buildcache/cache-keys/package-a526eb032785c717d1d154ed4a4337c726a852fc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a526eb032785c717d1d154ed4a4337c726a852fc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-714680259d338967dfb7c4fce49d6812d7302f41-{{checksum ".buildcache/cache-keys/package-714680259d338967dfb7c4fce49d6812d7302f41"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-714680259d338967dfb7c4fce49d6812d7302f41-{{checksum ".buildcache/cache-keys/package-714680259d338967dfb7c4fce49d6812d7302f41"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 714680259d338967dfb7c4fce49d6812d7302f41
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dfe836bf0fc14f8670c9c54af38d424f452dab44-{{checksum ".buildcache/cache-keys/package-dfe836bf0fc14f8670c9c54af38d424f452dab44"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dfe836bf0fc14f8670c9c54af38d424f452dab44-{{checksum ".buildcache/cache-keys/package-dfe836bf0fc14f8670c9c54af38d424f452dab44"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dfe836bf0fc14f8670c9c54af38d424f452dab44
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b9216b0858a42b84c5741e44794e51fd94cb081f-{{checksum ".buildcache/cache-keys/package-b9216b0858a42b84c5741e44794e51fd94cb081f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b9216b0858a42b84c5741e44794e51fd94cb081f-{{checksum ".buildcache/cache-keys/package-b9216b0858a42b84c5741e44794e51fd94cb081f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b9216b0858a42b84c5741e44794e51fd94cb081f
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-84433aa0f6e075f634ee331267ce8fc0bdcada4e-{{checksum ".buildcache/cache-keys/package-84433aa0f6e075f634ee331267ce8fc0bdcada4e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_8311_{{checksum ".buildcache/cache-keys/copy-source-831155a6fcffd820d4a1eaa985ca870bd8ea2c3a"}}
          keys:
            - go-modules_51f7_{{checksum ".buildcache/cache-keys/go-modules-51f724b890473b3100898bc034a41c88964158f9"}}
            - ui_b2d4_{{checksum ".buildcache/cache-keys/ui-b2d4621e8610464ada41eb6c1773585919b7f153"}}
            - base_9d0d_{{checksum ".buildcache/cache-keys/base-9d0dd0e19e6428e806b1129ecab7b44b9731d4a6"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-84433aa0f6e075f634ee331267ce8fc0bdcada4e-{{checksum ".buildcache/cache-keys/package-84433aa0f6e075f634ee331267ce8fc0bdcada4e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 84433aa0f6e075f634ee331267ce8fc0bdcada4e
workflows:
  build-c0a83677fce3734d:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
