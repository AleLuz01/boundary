version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-ecc4855907c70055bfa6db2f6c47b9702dd39714-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8.tar.gz
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67-{{checksum ".buildcache/cache-keys/package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67"}}
          name: Restore package cache
      - restore_cache:
          key: package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b-{{checksum ".buildcache/cache-keys/package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b"}}
          name: Restore package cache
      - restore_cache:
          key: package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f-{{checksum ".buildcache/cache-keys/package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f"}}
          name: Restore package cache
      - restore_cache:
          key: package-57fe171184863ce249a8fa5842a296c8850d1a36-{{checksum ".buildcache/cache-keys/package-57fe171184863ce249a8fa5842a296c8850d1a36"}}
          name: Restore package cache
      - restore_cache:
          key: package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d-{{checksum ".buildcache/cache-keys/package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d"}}
          name: Restore package cache
      - restore_cache:
          key: package-6eaf995eedce306bf0faf6a2885b572923d250e4-{{checksum ".buildcache/cache-keys/package-6eaf995eedce306bf0faf6a2885b572923d250e4"}}
          name: Restore package cache
      - restore_cache:
          key: package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1-{{checksum ".buildcache/cache-keys/package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1"}}
          name: Restore package cache
      - restore_cache:
          key: package-b7120e5692194d60d925b461e5b2e4f9ce79600f-{{checksum ".buildcache/cache-keys/package-b7120e5692194d60d925b461e5b2e4f9ce79600f"}}
          name: Restore package cache
      - restore_cache:
          key: package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40-{{checksum ".buildcache/cache-keys/package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40"}}
          name: Restore package cache
      - restore_cache:
          key: package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf-{{checksum ".buildcache/cache-keys/package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf"}}
          name: Restore package cache
      - restore_cache:
          key: package-1dd22a231800e410bdee61566a32b277b9f017c5-{{checksum ".buildcache/cache-keys/package-1dd22a231800e410bdee61566a32b277b9f017c5"}}
          name: Restore package cache
      - restore_cache:
          key: package-46668d422a46d4688764d23ed60a65139315d4b7-{{checksum ".buildcache/cache-keys/package-46668d422a46d4688764d23ed60a65139315d4b7"}}
          name: Restore package cache
      - restore_cache:
          key: package-22db1e50fc87cce73dc1cc765207553e6a07e22c-{{checksum ".buildcache/cache-keys/package-22db1e50fc87cce73dc1cc765207553e6a07e22c"}}
          name: Restore package cache
      - restore_cache:
          key: package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7-{{checksum ".buildcache/cache-keys/package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7"}}
          name: Restore package cache
      - restore_cache:
          key: package-b238ccb269d39c70cab05d19d7368ee095ac022b-{{checksum ".buildcache/cache-keys/package-b238ccb269d39c70cab05d19d7368ee095ac022b"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-f43ca3c8d7edb0bf.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-f43ca3c8d7edb0bf.tar.gz .buildcache/packages lockfile-f43ca3c8d7edb0bf.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-f43ca3c8d7edb0bf.tar.gz .buildcache/packages/store/*.json lockfile-f43ca3c8d7edb0bf.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-f43ca3c8d7edb0bf.yml
      - store_artifacts:
          path: packages-f43ca3c8d7edb0bf.tar.gz
      - store_artifacts:
          path: meta-f43ca3c8d7edb0bf.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67-{{checksum ".buildcache/cache-keys/package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67-{{checksum ".buildcache/cache-keys/package-f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f9cc70fa5dd2127ead1afe1c2fa69a92f18b3d67
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b-{{checksum ".buildcache/cache-keys/package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b-{{checksum ".buildcache/cache-keys/package-d0f46f872c2ba9f240dbd1d0b18c916a0c69374b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d0f46f872c2ba9f240dbd1d0b18c916a0c69374b
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f-{{checksum ".buildcache/cache-keys/package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f-{{checksum ".buildcache/cache-keys/package-913cfede721c5dd9d05a6ad43beec2843d5ffe2f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 913cfede721c5dd9d05a6ad43beec2843d5ffe2f
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-57fe171184863ce249a8fa5842a296c8850d1a36-{{checksum ".buildcache/cache-keys/package-57fe171184863ce249a8fa5842a296c8850d1a36"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-57fe171184863ce249a8fa5842a296c8850d1a36-{{checksum ".buildcache/cache-keys/package-57fe171184863ce249a8fa5842a296c8850d1a36"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 57fe171184863ce249a8fa5842a296c8850d1a36
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d-{{checksum ".buildcache/cache-keys/package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d-{{checksum ".buildcache/cache-keys/package-c7acb14cc55b9875dc7556d53e9b0aebfbb3176d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c7acb14cc55b9875dc7556d53e9b0aebfbb3176d
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6eaf995eedce306bf0faf6a2885b572923d250e4-{{checksum ".buildcache/cache-keys/package-6eaf995eedce306bf0faf6a2885b572923d250e4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6eaf995eedce306bf0faf6a2885b572923d250e4-{{checksum ".buildcache/cache-keys/package-6eaf995eedce306bf0faf6a2885b572923d250e4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6eaf995eedce306bf0faf6a2885b572923d250e4
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1-{{checksum ".buildcache/cache-keys/package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1-{{checksum ".buildcache/cache-keys/package-c3886aec6ae8cf63c1341dacffcaeb811ed758b1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c3886aec6ae8cf63c1341dacffcaeb811ed758b1
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b7120e5692194d60d925b461e5b2e4f9ce79600f-{{checksum ".buildcache/cache-keys/package-b7120e5692194d60d925b461e5b2e4f9ce79600f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b7120e5692194d60d925b461e5b2e4f9ce79600f-{{checksum ".buildcache/cache-keys/package-b7120e5692194d60d925b461e5b2e4f9ce79600f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b7120e5692194d60d925b461e5b2e4f9ce79600f
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40-{{checksum ".buildcache/cache-keys/package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40-{{checksum ".buildcache/cache-keys/package-e2647dcc1723ed9e0575ef49bdd70dafe5839f40"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e2647dcc1723ed9e0575ef49bdd70dafe5839f40
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf-{{checksum ".buildcache/cache-keys/package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf-{{checksum ".buildcache/cache-keys/package-8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8ea6daeb2abcc9e3fd38d0b0e4373694ba7f68bf
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1dd22a231800e410bdee61566a32b277b9f017c5-{{checksum ".buildcache/cache-keys/package-1dd22a231800e410bdee61566a32b277b9f017c5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1dd22a231800e410bdee61566a32b277b9f017c5-{{checksum ".buildcache/cache-keys/package-1dd22a231800e410bdee61566a32b277b9f017c5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1dd22a231800e410bdee61566a32b277b9f017c5
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-46668d422a46d4688764d23ed60a65139315d4b7-{{checksum ".buildcache/cache-keys/package-46668d422a46d4688764d23ed60a65139315d4b7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-46668d422a46d4688764d23ed60a65139315d4b7-{{checksum ".buildcache/cache-keys/package-46668d422a46d4688764d23ed60a65139315d4b7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 46668d422a46d4688764d23ed60a65139315d4b7
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-22db1e50fc87cce73dc1cc765207553e6a07e22c-{{checksum ".buildcache/cache-keys/package-22db1e50fc87cce73dc1cc765207553e6a07e22c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-22db1e50fc87cce73dc1cc765207553e6a07e22c-{{checksum ".buildcache/cache-keys/package-22db1e50fc87cce73dc1cc765207553e6a07e22c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 22db1e50fc87cce73dc1cc765207553e6a07e22c
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7-{{checksum ".buildcache/cache-keys/package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7-{{checksum ".buildcache/cache-keys/package-3c4dda6ef017f11b8a451c0c900339ec4a1304f7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3c4dda6ef017f11b8a451c0c900339ec4a1304f7
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b238ccb269d39c70cab05d19d7368ee095ac022b-{{checksum ".buildcache/cache-keys/package-b238ccb269d39c70cab05d19d7368ee095ac022b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b238ccb269d39c70cab05d19d7368ee095ac022b-{{checksum ".buildcache/cache-keys/package-b238ccb269d39c70cab05d19d7368ee095ac022b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b238ccb269d39c70cab05d19d7368ee095ac022b
workflows:
  build-f43ca3c8d7edb0bf:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
