version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 407a21991aa7dc550967720466d4b10c2e02ee1c
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 407a21991aa7dc550967720466d4b10c2e02ee1c
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-54c674f158df280fa31590881af83398756e3fa8 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c1b062529408b82c5c8741588ffb2724ba8bfb55-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-54c674f158df280fa31590881af83398756e3fa8-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-54c674f158df280fa31590881af83398756e3fa8-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-54c674f158df280fa31590881af83398756e3fa8.tar.gz
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c-{{checksum ".buildcache/cache-keys/package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c"}}
          name: Restore package cache
      - restore_cache:
          key: package-ce134ade2078caf19cb89136c8a23e5372ed1b03-{{checksum ".buildcache/cache-keys/package-ce134ade2078caf19cb89136c8a23e5372ed1b03"}}
          name: Restore package cache
      - restore_cache:
          key: package-a274a656d208ff225641482ef729d42c30f7b106-{{checksum ".buildcache/cache-keys/package-a274a656d208ff225641482ef729d42c30f7b106"}}
          name: Restore package cache
      - restore_cache:
          key: package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2-{{checksum ".buildcache/cache-keys/package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2"}}
          name: Restore package cache
      - restore_cache:
          key: package-cb61dcd1eedce365cec0d3217672e52360d86a50-{{checksum ".buildcache/cache-keys/package-cb61dcd1eedce365cec0d3217672e52360d86a50"}}
          name: Restore package cache
      - restore_cache:
          key: package-fb491c4dec967d01c09a4bcdad78d30b0df89171-{{checksum ".buildcache/cache-keys/package-fb491c4dec967d01c09a4bcdad78d30b0df89171"}}
          name: Restore package cache
      - restore_cache:
          key: package-1923f412c89e1492cd88d7106e5623571f9fa9bd-{{checksum ".buildcache/cache-keys/package-1923f412c89e1492cd88d7106e5623571f9fa9bd"}}
          name: Restore package cache
      - restore_cache:
          key: package-710c38340a35517a8d540f7b29754f7329c657d0-{{checksum ".buildcache/cache-keys/package-710c38340a35517a8d540f7b29754f7329c657d0"}}
          name: Restore package cache
      - restore_cache:
          key: package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42-{{checksum ".buildcache/cache-keys/package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42"}}
          name: Restore package cache
      - restore_cache:
          key: package-9c7396b0177aa91f9af86a5b14b2abe707625349-{{checksum ".buildcache/cache-keys/package-9c7396b0177aa91f9af86a5b14b2abe707625349"}}
          name: Restore package cache
      - restore_cache:
          key: package-0928dac53eb41a06d1c48a3e6945ea123dbd572b-{{checksum ".buildcache/cache-keys/package-0928dac53eb41a06d1c48a3e6945ea123dbd572b"}}
          name: Restore package cache
      - restore_cache:
          key: package-880f109641f88f508b27307d84bcf03f7b921547-{{checksum ".buildcache/cache-keys/package-880f109641f88f508b27307d84bcf03f7b921547"}}
          name: Restore package cache
      - restore_cache:
          key: package-5c4388bdfeaaa7c8644988cf84600dce3cb79198-{{checksum ".buildcache/cache-keys/package-5c4388bdfeaaa7c8644988cf84600dce3cb79198"}}
          name: Restore package cache
      - restore_cache:
          key: package-3a517aeec4a4db97a021025fb24e31463f988441-{{checksum ".buildcache/cache-keys/package-3a517aeec4a4db97a021025fb24e31463f988441"}}
          name: Restore package cache
      - restore_cache:
          key: package-edf65cea8d7f82bff17498f32b02ead97ece6a42-{{checksum ".buildcache/cache-keys/package-edf65cea8d7f82bff17498f32b02ead97ece6a42"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.tar.gz .buildcache/packages lockfile-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.tar.gz .buildcache/packages/store/*.json lockfile-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.yml
      - store_artifacts:
          path: packages-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.tar.gz
      - store_artifacts:
          path: meta-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c-{{checksum ".buildcache/cache-keys/package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c-{{checksum ".buildcache/cache-keys/package-162a37aa4984c57c74d9d3a32cc6d7d8802ea54c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 162a37aa4984c57c74d9d3a32cc6d7d8802ea54c
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ce134ade2078caf19cb89136c8a23e5372ed1b03-{{checksum ".buildcache/cache-keys/package-ce134ade2078caf19cb89136c8a23e5372ed1b03"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ce134ade2078caf19cb89136c8a23e5372ed1b03-{{checksum ".buildcache/cache-keys/package-ce134ade2078caf19cb89136c8a23e5372ed1b03"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ce134ade2078caf19cb89136c8a23e5372ed1b03
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a274a656d208ff225641482ef729d42c30f7b106-{{checksum ".buildcache/cache-keys/package-a274a656d208ff225641482ef729d42c30f7b106"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a274a656d208ff225641482ef729d42c30f7b106-{{checksum ".buildcache/cache-keys/package-a274a656d208ff225641482ef729d42c30f7b106"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a274a656d208ff225641482ef729d42c30f7b106
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2-{{checksum ".buildcache/cache-keys/package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2-{{checksum ".buildcache/cache-keys/package-b849e8aba0d8f56f200ba27f3643e5ba1627cdb2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b849e8aba0d8f56f200ba27f3643e5ba1627cdb2
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cb61dcd1eedce365cec0d3217672e52360d86a50-{{checksum ".buildcache/cache-keys/package-cb61dcd1eedce365cec0d3217672e52360d86a50"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cb61dcd1eedce365cec0d3217672e52360d86a50-{{checksum ".buildcache/cache-keys/package-cb61dcd1eedce365cec0d3217672e52360d86a50"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cb61dcd1eedce365cec0d3217672e52360d86a50
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fb491c4dec967d01c09a4bcdad78d30b0df89171-{{checksum ".buildcache/cache-keys/package-fb491c4dec967d01c09a4bcdad78d30b0df89171"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fb491c4dec967d01c09a4bcdad78d30b0df89171-{{checksum ".buildcache/cache-keys/package-fb491c4dec967d01c09a4bcdad78d30b0df89171"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fb491c4dec967d01c09a4bcdad78d30b0df89171
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1923f412c89e1492cd88d7106e5623571f9fa9bd-{{checksum ".buildcache/cache-keys/package-1923f412c89e1492cd88d7106e5623571f9fa9bd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1923f412c89e1492cd88d7106e5623571f9fa9bd-{{checksum ".buildcache/cache-keys/package-1923f412c89e1492cd88d7106e5623571f9fa9bd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1923f412c89e1492cd88d7106e5623571f9fa9bd
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-710c38340a35517a8d540f7b29754f7329c657d0-{{checksum ".buildcache/cache-keys/package-710c38340a35517a8d540f7b29754f7329c657d0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-710c38340a35517a8d540f7b29754f7329c657d0-{{checksum ".buildcache/cache-keys/package-710c38340a35517a8d540f7b29754f7329c657d0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 710c38340a35517a8d540f7b29754f7329c657d0
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42-{{checksum ".buildcache/cache-keys/package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42-{{checksum ".buildcache/cache-keys/package-3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3c8f671dde46f60fac5c0a52bc67be4fbdc4ea42
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9c7396b0177aa91f9af86a5b14b2abe707625349-{{checksum ".buildcache/cache-keys/package-9c7396b0177aa91f9af86a5b14b2abe707625349"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9c7396b0177aa91f9af86a5b14b2abe707625349-{{checksum ".buildcache/cache-keys/package-9c7396b0177aa91f9af86a5b14b2abe707625349"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9c7396b0177aa91f9af86a5b14b2abe707625349
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0928dac53eb41a06d1c48a3e6945ea123dbd572b-{{checksum ".buildcache/cache-keys/package-0928dac53eb41a06d1c48a3e6945ea123dbd572b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0928dac53eb41a06d1c48a3e6945ea123dbd572b-{{checksum ".buildcache/cache-keys/package-0928dac53eb41a06d1c48a3e6945ea123dbd572b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0928dac53eb41a06d1c48a3e6945ea123dbd572b
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-880f109641f88f508b27307d84bcf03f7b921547-{{checksum ".buildcache/cache-keys/package-880f109641f88f508b27307d84bcf03f7b921547"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-880f109641f88f508b27307d84bcf03f7b921547-{{checksum ".buildcache/cache-keys/package-880f109641f88f508b27307d84bcf03f7b921547"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 880f109641f88f508b27307d84bcf03f7b921547
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5c4388bdfeaaa7c8644988cf84600dce3cb79198-{{checksum ".buildcache/cache-keys/package-5c4388bdfeaaa7c8644988cf84600dce3cb79198"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5c4388bdfeaaa7c8644988cf84600dce3cb79198-{{checksum ".buildcache/cache-keys/package-5c4388bdfeaaa7c8644988cf84600dce3cb79198"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5c4388bdfeaaa7c8644988cf84600dce3cb79198
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3a517aeec4a4db97a021025fb24e31463f988441-{{checksum ".buildcache/cache-keys/package-3a517aeec4a4db97a021025fb24e31463f988441"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3a517aeec4a4db97a021025fb24e31463f988441-{{checksum ".buildcache/cache-keys/package-3a517aeec4a4db97a021025fb24e31463f988441"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3a517aeec4a4db97a021025fb24e31463f988441
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-edf65cea8d7f82bff17498f32b02ead97ece6a42-{{checksum ".buildcache/cache-keys/package-edf65cea8d7f82bff17498f32b02ead97ece6a42"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-edf65cea8d7f82bff17498f32b02ead97ece6a42-{{checksum ".buildcache/cache-keys/package-edf65cea8d7f82bff17498f32b02ead97ece6a42"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: edf65cea8d7f82bff17498f32b02ead97ece6a42
workflows:
  build-407a21991aa7dc550967720466d4b10c2e02ee1c-af038697addc95f7:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
