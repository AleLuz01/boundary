version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-acb5298039d979012605aa8af44f1cb03bc34809-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-7643076cb6e153b7cbbdb1ae124196b6e055831d-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-28439835ef58deab2d0b0cda96d72784d77871bd-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63.tar.gz
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-4d5c9df93608dec91fd02d4b43ed55ee784197a0-{{checksum ".buildcache/cache-keys/package-4d5c9df93608dec91fd02d4b43ed55ee784197a0"}}
          name: Restore package cache
      - restore_cache:
          key: package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3-{{checksum ".buildcache/cache-keys/package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3"}}
          name: Restore package cache
      - restore_cache:
          key: package-d5697b8ecc396bbb992a5806a522417e79ad87f1-{{checksum ".buildcache/cache-keys/package-d5697b8ecc396bbb992a5806a522417e79ad87f1"}}
          name: Restore package cache
      - restore_cache:
          key: package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d-{{checksum ".buildcache/cache-keys/package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d"}}
          name: Restore package cache
      - restore_cache:
          key: package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a-{{checksum ".buildcache/cache-keys/package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a"}}
          name: Restore package cache
      - restore_cache:
          key: package-fabae55ed722492431be99c7712c5b5f921e8f8d-{{checksum ".buildcache/cache-keys/package-fabae55ed722492431be99c7712c5b5f921e8f8d"}}
          name: Restore package cache
      - restore_cache:
          key: package-a3a2ebfb38864c7646f94d26371fbad04c859b5f-{{checksum ".buildcache/cache-keys/package-a3a2ebfb38864c7646f94d26371fbad04c859b5f"}}
          name: Restore package cache
      - restore_cache:
          key: package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73-{{checksum ".buildcache/cache-keys/package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73"}}
          name: Restore package cache
      - restore_cache:
          key: package-697dd7350d582548ba1a485df783ed761dc46062-{{checksum ".buildcache/cache-keys/package-697dd7350d582548ba1a485df783ed761dc46062"}}
          name: Restore package cache
      - restore_cache:
          key: package-523eec250f371b1976b386cca40b58bfc811c5cc-{{checksum ".buildcache/cache-keys/package-523eec250f371b1976b386cca40b58bfc811c5cc"}}
          name: Restore package cache
      - restore_cache:
          key: package-8c2662988761429f96a8c2fde50e8c3b82684e6a-{{checksum ".buildcache/cache-keys/package-8c2662988761429f96a8c2fde50e8c3b82684e6a"}}
          name: Restore package cache
      - restore_cache:
          key: package-8406fd1c61ada3794723edf7f00dd3ce0ba43219-{{checksum ".buildcache/cache-keys/package-8406fd1c61ada3794723edf7f00dd3ce0ba43219"}}
          name: Restore package cache
      - restore_cache:
          key: package-cb8c0e7eae7076471001cda802baa9b7341c780f-{{checksum ".buildcache/cache-keys/package-cb8c0e7eae7076471001cda802baa9b7341c780f"}}
          name: Restore package cache
      - restore_cache:
          key: package-0868fa6c21c807bdf4202c0394ffeaf145c612c6-{{checksum ".buildcache/cache-keys/package-0868fa6c21c807bdf4202c0394ffeaf145c612c6"}}
          name: Restore package cache
      - restore_cache:
          key: package-7de237c49617dc815542fffc726c9e06a37d9d13-{{checksum ".buildcache/cache-keys/package-7de237c49617dc815542fffc726c9e06a37d9d13"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.tar.gz .buildcache/packages lockfile-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.tar.gz .buildcache/packages/store/*.json lockfile-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.yml
      - store_artifacts:
          path: packages-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.tar.gz
      - store_artifacts:
          path: meta-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4d5c9df93608dec91fd02d4b43ed55ee784197a0-{{checksum ".buildcache/cache-keys/package-4d5c9df93608dec91fd02d4b43ed55ee784197a0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4d5c9df93608dec91fd02d4b43ed55ee784197a0-{{checksum ".buildcache/cache-keys/package-4d5c9df93608dec91fd02d4b43ed55ee784197a0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4d5c9df93608dec91fd02d4b43ed55ee784197a0
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3-{{checksum ".buildcache/cache-keys/package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3-{{checksum ".buildcache/cache-keys/package-2ac50ed2567b74d6524a602a77d6688a0ca3e3c3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2ac50ed2567b74d6524a602a77d6688a0ca3e3c3
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d5697b8ecc396bbb992a5806a522417e79ad87f1-{{checksum ".buildcache/cache-keys/package-d5697b8ecc396bbb992a5806a522417e79ad87f1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d5697b8ecc396bbb992a5806a522417e79ad87f1-{{checksum ".buildcache/cache-keys/package-d5697b8ecc396bbb992a5806a522417e79ad87f1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d5697b8ecc396bbb992a5806a522417e79ad87f1
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d-{{checksum ".buildcache/cache-keys/package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d-{{checksum ".buildcache/cache-keys/package-a4661c2aee3545a5a12fbcff9d2bf99a60b8089d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a4661c2aee3545a5a12fbcff9d2bf99a60b8089d
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a-{{checksum ".buildcache/cache-keys/package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a-{{checksum ".buildcache/cache-keys/package-dc21f1af6f32c42c2312e9ba7e744e7540e50b9a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dc21f1af6f32c42c2312e9ba7e744e7540e50b9a
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fabae55ed722492431be99c7712c5b5f921e8f8d-{{checksum ".buildcache/cache-keys/package-fabae55ed722492431be99c7712c5b5f921e8f8d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fabae55ed722492431be99c7712c5b5f921e8f8d-{{checksum ".buildcache/cache-keys/package-fabae55ed722492431be99c7712c5b5f921e8f8d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fabae55ed722492431be99c7712c5b5f921e8f8d
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a3a2ebfb38864c7646f94d26371fbad04c859b5f-{{checksum ".buildcache/cache-keys/package-a3a2ebfb38864c7646f94d26371fbad04c859b5f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a3a2ebfb38864c7646f94d26371fbad04c859b5f-{{checksum ".buildcache/cache-keys/package-a3a2ebfb38864c7646f94d26371fbad04c859b5f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a3a2ebfb38864c7646f94d26371fbad04c859b5f
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73-{{checksum ".buildcache/cache-keys/package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73-{{checksum ".buildcache/cache-keys/package-fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fec81451bf7fa9aa8d3bfc1c48e4a3294e20cb73
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-697dd7350d582548ba1a485df783ed761dc46062-{{checksum ".buildcache/cache-keys/package-697dd7350d582548ba1a485df783ed761dc46062"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-697dd7350d582548ba1a485df783ed761dc46062-{{checksum ".buildcache/cache-keys/package-697dd7350d582548ba1a485df783ed761dc46062"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 697dd7350d582548ba1a485df783ed761dc46062
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-523eec250f371b1976b386cca40b58bfc811c5cc-{{checksum ".buildcache/cache-keys/package-523eec250f371b1976b386cca40b58bfc811c5cc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-523eec250f371b1976b386cca40b58bfc811c5cc-{{checksum ".buildcache/cache-keys/package-523eec250f371b1976b386cca40b58bfc811c5cc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 523eec250f371b1976b386cca40b58bfc811c5cc
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8c2662988761429f96a8c2fde50e8c3b82684e6a-{{checksum ".buildcache/cache-keys/package-8c2662988761429f96a8c2fde50e8c3b82684e6a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8c2662988761429f96a8c2fde50e8c3b82684e6a-{{checksum ".buildcache/cache-keys/package-8c2662988761429f96a8c2fde50e8c3b82684e6a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8c2662988761429f96a8c2fde50e8c3b82684e6a
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8406fd1c61ada3794723edf7f00dd3ce0ba43219-{{checksum ".buildcache/cache-keys/package-8406fd1c61ada3794723edf7f00dd3ce0ba43219"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8406fd1c61ada3794723edf7f00dd3ce0ba43219-{{checksum ".buildcache/cache-keys/package-8406fd1c61ada3794723edf7f00dd3ce0ba43219"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8406fd1c61ada3794723edf7f00dd3ce0ba43219
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cb8c0e7eae7076471001cda802baa9b7341c780f-{{checksum ".buildcache/cache-keys/package-cb8c0e7eae7076471001cda802baa9b7341c780f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cb8c0e7eae7076471001cda802baa9b7341c780f-{{checksum ".buildcache/cache-keys/package-cb8c0e7eae7076471001cda802baa9b7341c780f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cb8c0e7eae7076471001cda802baa9b7341c780f
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0868fa6c21c807bdf4202c0394ffeaf145c612c6-{{checksum ".buildcache/cache-keys/package-0868fa6c21c807bdf4202c0394ffeaf145c612c6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0868fa6c21c807bdf4202c0394ffeaf145c612c6-{{checksum ".buildcache/cache-keys/package-0868fa6c21c807bdf4202c0394ffeaf145c612c6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0868fa6c21c807bdf4202c0394ffeaf145c612c6
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7de237c49617dc815542fffc726c9e06a37d9d13-{{checksum ".buildcache/cache-keys/package-7de237c49617dc815542fffc726c9e06a37d9d13"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7de237c49617dc815542fffc726c9e06a37d9d13-{{checksum ".buildcache/cache-keys/package-7de237c49617dc815542fffc726c9e06a37d9d13"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7de237c49617dc815542fffc726c9e06a37d9d13
workflows:
  build-c3cbf23eaba7c37a4e7a2829c19e8bb2f63efc10-d2d108249f2b472e:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
