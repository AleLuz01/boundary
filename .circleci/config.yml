version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 6b578c0e30ad9e24714f6464177d4af6e8bace21
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 6b578c0e30ad9e24714f6464177d4af6e8bace21
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-176c86fc77a587390f15ea7a13560ae1bbf3e33c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e.tar.gz
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114-{{checksum ".buildcache/cache-keys/package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114"}}
          name: Restore package cache
      - restore_cache:
          key: package-435fe85d311c4f69961ad09e419862663435a8c4-{{checksum ".buildcache/cache-keys/package-435fe85d311c4f69961ad09e419862663435a8c4"}}
          name: Restore package cache
      - restore_cache:
          key: package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9-{{checksum ".buildcache/cache-keys/package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9"}}
          name: Restore package cache
      - restore_cache:
          key: package-5b7142c43127fe19f054421b8b3c101aed88d1c1-{{checksum ".buildcache/cache-keys/package-5b7142c43127fe19f054421b8b3c101aed88d1c1"}}
          name: Restore package cache
      - restore_cache:
          key: package-df39865420c810f7f5579f37c4675ceac13a494e-{{checksum ".buildcache/cache-keys/package-df39865420c810f7f5579f37c4675ceac13a494e"}}
          name: Restore package cache
      - restore_cache:
          key: package-96104720eb87a03a54d8eabae75f00aeb28c1848-{{checksum ".buildcache/cache-keys/package-96104720eb87a03a54d8eabae75f00aeb28c1848"}}
          name: Restore package cache
      - restore_cache:
          key: package-341ad77a19616bb27425fa8adbea7ea3e5502001-{{checksum ".buildcache/cache-keys/package-341ad77a19616bb27425fa8adbea7ea3e5502001"}}
          name: Restore package cache
      - restore_cache:
          key: package-3c928643daf37735c9f883234b954d37ee8d97c8-{{checksum ".buildcache/cache-keys/package-3c928643daf37735c9f883234b954d37ee8d97c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-63400625f1c6646160d18158195f50b597ce92b8-{{checksum ".buildcache/cache-keys/package-63400625f1c6646160d18158195f50b597ce92b8"}}
          name: Restore package cache
      - restore_cache:
          key: package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf-{{checksum ".buildcache/cache-keys/package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf"}}
          name: Restore package cache
      - restore_cache:
          key: package-35c5638dc731a621bedf8404ce03d862fdf13e86-{{checksum ".buildcache/cache-keys/package-35c5638dc731a621bedf8404ce03d862fdf13e86"}}
          name: Restore package cache
      - restore_cache:
          key: package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936-{{checksum ".buildcache/cache-keys/package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936"}}
          name: Restore package cache
      - restore_cache:
          key: package-d86a6b555f11730202866d4adf9b5ea00ae500c8-{{checksum ".buildcache/cache-keys/package-d86a6b555f11730202866d4adf9b5ea00ae500c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-92a8e080a4af6610275b1091e5660cd17246b892-{{checksum ".buildcache/cache-keys/package-92a8e080a4af6610275b1091e5660cd17246b892"}}
          name: Restore package cache
      - restore_cache:
          key: package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc-{{checksum ".buildcache/cache-keys/package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.tar.gz .buildcache/packages lockfile-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.tar.gz .buildcache/packages/store/*.json lockfile-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.yml
      - store_artifacts:
          path: packages-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.tar.gz
      - store_artifacts:
          path: meta-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114-{{checksum ".buildcache/cache-keys/package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114-{{checksum ".buildcache/cache-keys/package-4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4e2a422d57cdedbd7d62c7ce8e8914d35c5bd114
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-435fe85d311c4f69961ad09e419862663435a8c4-{{checksum ".buildcache/cache-keys/package-435fe85d311c4f69961ad09e419862663435a8c4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-435fe85d311c4f69961ad09e419862663435a8c4-{{checksum ".buildcache/cache-keys/package-435fe85d311c4f69961ad09e419862663435a8c4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 435fe85d311c4f69961ad09e419862663435a8c4
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9-{{checksum ".buildcache/cache-keys/package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9-{{checksum ".buildcache/cache-keys/package-7cb1554d35bbb8459e2cc8e9bf750a3a345531d9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7cb1554d35bbb8459e2cc8e9bf750a3a345531d9
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5b7142c43127fe19f054421b8b3c101aed88d1c1-{{checksum ".buildcache/cache-keys/package-5b7142c43127fe19f054421b8b3c101aed88d1c1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5b7142c43127fe19f054421b8b3c101aed88d1c1-{{checksum ".buildcache/cache-keys/package-5b7142c43127fe19f054421b8b3c101aed88d1c1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5b7142c43127fe19f054421b8b3c101aed88d1c1
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-df39865420c810f7f5579f37c4675ceac13a494e-{{checksum ".buildcache/cache-keys/package-df39865420c810f7f5579f37c4675ceac13a494e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-df39865420c810f7f5579f37c4675ceac13a494e-{{checksum ".buildcache/cache-keys/package-df39865420c810f7f5579f37c4675ceac13a494e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: df39865420c810f7f5579f37c4675ceac13a494e
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96104720eb87a03a54d8eabae75f00aeb28c1848-{{checksum ".buildcache/cache-keys/package-96104720eb87a03a54d8eabae75f00aeb28c1848"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96104720eb87a03a54d8eabae75f00aeb28c1848-{{checksum ".buildcache/cache-keys/package-96104720eb87a03a54d8eabae75f00aeb28c1848"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96104720eb87a03a54d8eabae75f00aeb28c1848
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-341ad77a19616bb27425fa8adbea7ea3e5502001-{{checksum ".buildcache/cache-keys/package-341ad77a19616bb27425fa8adbea7ea3e5502001"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-341ad77a19616bb27425fa8adbea7ea3e5502001-{{checksum ".buildcache/cache-keys/package-341ad77a19616bb27425fa8adbea7ea3e5502001"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 341ad77a19616bb27425fa8adbea7ea3e5502001
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3c928643daf37735c9f883234b954d37ee8d97c8-{{checksum ".buildcache/cache-keys/package-3c928643daf37735c9f883234b954d37ee8d97c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3c928643daf37735c9f883234b954d37ee8d97c8-{{checksum ".buildcache/cache-keys/package-3c928643daf37735c9f883234b954d37ee8d97c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3c928643daf37735c9f883234b954d37ee8d97c8
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-63400625f1c6646160d18158195f50b597ce92b8-{{checksum ".buildcache/cache-keys/package-63400625f1c6646160d18158195f50b597ce92b8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-63400625f1c6646160d18158195f50b597ce92b8-{{checksum ".buildcache/cache-keys/package-63400625f1c6646160d18158195f50b597ce92b8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 63400625f1c6646160d18158195f50b597ce92b8
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf-{{checksum ".buildcache/cache-keys/package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf-{{checksum ".buildcache/cache-keys/package-5a874b9987e8531b0c74fc021f2bdf5d88c25cbf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5a874b9987e8531b0c74fc021f2bdf5d88c25cbf
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-35c5638dc731a621bedf8404ce03d862fdf13e86-{{checksum ".buildcache/cache-keys/package-35c5638dc731a621bedf8404ce03d862fdf13e86"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-35c5638dc731a621bedf8404ce03d862fdf13e86-{{checksum ".buildcache/cache-keys/package-35c5638dc731a621bedf8404ce03d862fdf13e86"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 35c5638dc731a621bedf8404ce03d862fdf13e86
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936-{{checksum ".buildcache/cache-keys/package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936-{{checksum ".buildcache/cache-keys/package-eeba3c6be0a3a20e27cb05028ea96970a1ef9936"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eeba3c6be0a3a20e27cb05028ea96970a1ef9936
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d86a6b555f11730202866d4adf9b5ea00ae500c8-{{checksum ".buildcache/cache-keys/package-d86a6b555f11730202866d4adf9b5ea00ae500c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d86a6b555f11730202866d4adf9b5ea00ae500c8-{{checksum ".buildcache/cache-keys/package-d86a6b555f11730202866d4adf9b5ea00ae500c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d86a6b555f11730202866d4adf9b5ea00ae500c8
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-92a8e080a4af6610275b1091e5660cd17246b892-{{checksum ".buildcache/cache-keys/package-92a8e080a4af6610275b1091e5660cd17246b892"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-92a8e080a4af6610275b1091e5660cd17246b892-{{checksum ".buildcache/cache-keys/package-92a8e080a4af6610275b1091e5660cd17246b892"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 92a8e080a4af6610275b1091e5660cd17246b892
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc-{{checksum ".buildcache/cache-keys/package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc-{{checksum ".buildcache/cache-keys/package-cd390b42019c2ad8bc7da7fc48535e79c2356fbc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cd390b42019c2ad8bc7da7fc48535e79c2356fbc
workflows:
  build-6b578c0e30ad9e24714f6464177d4af6e8bace21-cc6dc78824077df7:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
